<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- Specify the location of your config -->
    <context:component-scan base-package="com.spring.web.controllers">
    </context:component-scan>

    <!-- This is what makes the @Controller annotation work.-->
    <mvc:annotation-driven/>
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"/>

    <bean id="jspViewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsps/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- View resolver will figure out how to take logical name of each of the
     pages and resolve it to JSP files -->
    <!--bean id="viewResolver"
          class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
    </bean-->
    <!-- Configure how to pull in JSP files in order to resolve the view -->
    <!--bean id="tilesConfigurer"
          class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/defs/tiles.xml</value>
            </list>
        </property>
    </bean-->


    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="com.spring.web.messages.messages"/>
    </bean>

</beans>
